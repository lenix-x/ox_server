name: Pre-release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Version tag'
        required: true

jobs:
  create-release:
    name: Build and Create Tagged pre-release
    runs-on: ubuntu-latest

    steps:
      - name: Install archive tools
        run: sudo apt install zip

      - name: Checkout source code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.event.repository.default_branch }}

      - name: Install pnpm
        uses: pnpm/action-setup@v2.2.2
        with:
          version: 8.7.6

      - name: Get variables
        id: get_vars
        run: |
          echo '::set-output name=SHORT_SHA::$(git rev-parse --short HEAD)'
          echo '::set-output name=DATE::$(date +'%D')'

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
          cache: 'pnpm'
          cache-dependency-path: 'web/pnpm-lock.yaml'

      - name: Install dependencies
        run: pnpm i --frozen-lockfile
        working-directory: web

      - name: Run build
        run: pnpm build
        working-directory: web
        env:
          CI: false

      - name: Bump manifest version
        run: node .github/actions/bump-manifest-version.js
        env:
          TGT_RELEASE_VERSION: ${{ github.event.inputs.tag }}

      - name: Push manifest change
        uses: EndBug/add-and-commit@v8
        with:
          add: fxmanifest.lua
          push: true
          author_name: Manifest Bumper
          author_email: 41898282+github-actions[bot]@users.noreply.github.com
          message: 'chore: bump manifest version to ${{ github.event.inputs.tag }}'

      - name: Update tag ref
        uses: EndBug/latest-tag@latest
        with:
          tag-name: ${{ github.event.inputs.tag }}

      - name: Bundle files
        run: |
          mkdir -p ./temp/ox_mdt
          mkdir -p ./temp/ox_mdt/web
          cp ./{README.md,permissions.json,LICENSE,fxmanifest.lua,config.lua,types.lua} ./temp/ox_mdt
          cp -r ./{client,locales,server,sql} ./temp/ox_mdt
          cp -r ./web/build ./temp/ox_mdt/web/build
          cd ./temp && zip -r ../ox_mdt.zip ./ox_mdt

      - name: Create Release
        uses: 'marvinpinto/action-automatic-releases@v1.2.1'
        id: auto_release
        with:
          repo_token: '${{ secrets.GITHUB_TOKEN }}'
          title: 'Pre-release - ${{ github.event.inputs.tag }}'
          prerelease: true
          automatic_release_tag: '${{ github.event.inputs.tag }}'
          files: ox_mdt.zip

        env:
          CI: false
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
